package com.happydriving.rockets.campaign.spread.mapper;

import com.happydriving.rockets.campaign.spread.entity.SpreadReferrer;
import com.happydriving.rockets.campaign.spread.entity.SpreadReferrerExample;
import com.happydriving.rockets.campaign.spread.model.SpreadReferrerStatisticInfo;
import org.apache.ibatis.annotations.*;

import java.util.Date;
import java.util.List;
import java.util.Map;

public interface SpreadReferrerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    int countByExample(SpreadReferrerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    int deleteByExample(SpreadReferrerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    @Delete({
            "delete from spread_referrer",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    @Insert({
            "insert into spread_referrer (id, phone, ",
            "name, password_digest, ",
            "remember_token, created_at, ",
            "city_id)",
            "values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, ",
            "#{name,jdbcType=VARCHAR}, #{passwordDigest,jdbcType=VARCHAR}, ",
            "#{rememberToken,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
            "#{cityId,jdbcType=INTEGER})"
    })
    int insert(SpreadReferrer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    int insertSelective(SpreadReferrer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    List<SpreadReferrer> selectByExample(SpreadReferrerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "id, phone, name, password_digest, remember_token, created_at, city_id",
            "from spread_referrer",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    SpreadReferrer selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") SpreadReferrer record, @Param("example") SpreadReferrerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") SpreadReferrer record, @Param("example") SpreadReferrerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(SpreadReferrer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_referrer
     *
     * @mbggenerated
     */
    @Update({
            "update spread_referrer",
            "set phone = #{phone,jdbcType=VARCHAR},",
            "name = #{name,jdbcType=VARCHAR},",
            "password_digest = #{passwordDigest,jdbcType=VARCHAR},",
            "remember_token = #{rememberToken,jdbcType=VARCHAR},",
            "created_at = #{createdAt,jdbcType=TIMESTAMP},",
            "city_id = #{cityId,jdbcType=INTEGER}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SpreadReferrer record);

    int insertAndGetId(SpreadReferrer record);

    List<SpreadReferrerStatisticInfo> getSpreadReferrerStatisticInfoByCityId(@Param("cityId") int cityId);

    List<Map> getStatisticCityReferrerCount();

    List<Map> getDailyCityTransferCount(@Param("startDate") Date startDate, @Param("endDate") Date endDate);

}