package com.happydriving.rockets.campaign.spread.mapper;

import com.happydriving.rockets.campaign.spread.entity.SpreadStudent;
import com.happydriving.rockets.campaign.spread.entity.SpreadStudentExample;
import com.happydriving.rockets.campaign.spread.model.SpreadReferrerStatisticInfo;
import com.happydriving.rockets.campaign.spread.model.SpreadStudentDetailInfo;
import org.apache.ibatis.annotations.*;

import java.util.Date;
import java.util.List;

public interface SpreadStudentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    int countByExample(SpreadStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    int deleteByExample(SpreadStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    @Delete({
            "delete from spread_student",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    @Insert({
            "insert into spread_student (id, phone, ",
            "name, referrer_id, ",
            "comment, created_at, ",
            "transfer_at, is_transfer, ",
            "city_id)",
            "values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, ",
            "#{name,jdbcType=VARCHAR}, #{referrerId,jdbcType=INTEGER}, ",
            "#{comment,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, ",
            "#{transferAt,jdbcType=TIMESTAMP}, #{isTransfer,jdbcType=BIT}, ",
            "#{cityId,jdbcType=INTEGER})"
    })
    int insert(SpreadStudent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    int insertSelective(SpreadStudent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    List<SpreadStudent> selectByExample(SpreadStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "id, phone, name, referrer_id, comment, created_at, transfer_at, is_transfer, ",
            "city_id",
            "from spread_student",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    SpreadStudent selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") SpreadStudent record, @Param("example") SpreadStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") SpreadStudent record, @Param("example") SpreadStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(SpreadStudent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spread_student
     *
     * @mbggenerated
     */
    @Update({
            "update spread_student",
            "set phone = #{phone,jdbcType=VARCHAR},",
            "name = #{name,jdbcType=VARCHAR},",
            "referrer_id = #{referrerId,jdbcType=INTEGER},",
            "comment = #{comment,jdbcType=VARCHAR},",
            "created_at = #{createdAt,jdbcType=TIMESTAMP},",
            "transfer_at = #{transferAt,jdbcType=TIMESTAMP},",
            "is_transfer = #{isTransfer,jdbcType=BIT},",
            "city_id = #{cityId,jdbcType=INTEGER}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SpreadStudent record);

    List<SpreadStudentDetailInfo> getAllSpreadStudentsByCityId(@Param("cityId") int cityId);

    List<SpreadStudentDetailInfo> getSpreadStudentDetailsByCondition(@Param("cityId") int cityId,
                                                                     @Param("startDate") Date startDate,
                                                                     @Param("endDate") Date endDate);

    int insertAndGetId(SpreadStudent spreadStudent);

    SpreadStudentDetailInfo getSpreadStudentDetailsById(@Param("studentId") int studentId);
}