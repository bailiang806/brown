package com.happydriving.rockets.server.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DsTrainingScheduleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public DsTrainingScheduleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTrainingCityIsNull() {
            addCriterion("TRAINING_CITY is null");
            return (Criteria) this;
        }

        public Criteria andTrainingCityIsNotNull() {
            addCriterion("TRAINING_CITY is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingCityEqualTo(String value) {
            addCriterion("TRAINING_CITY =", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityNotEqualTo(String value) {
            addCriterion("TRAINING_CITY <>", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityGreaterThan(String value) {
            addCriterion("TRAINING_CITY >", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityGreaterThanOrEqualTo(String value) {
            addCriterion("TRAINING_CITY >=", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityLessThan(String value) {
            addCriterion("TRAINING_CITY <", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityLessThanOrEqualTo(String value) {
            addCriterion("TRAINING_CITY <=", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityLike(String value) {
            addCriterion("TRAINING_CITY like", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityNotLike(String value) {
            addCriterion("TRAINING_CITY not like", value, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityIn(List<String> values) {
            addCriterion("TRAINING_CITY in", values, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityNotIn(List<String> values) {
            addCriterion("TRAINING_CITY not in", values, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityBetween(String value1, String value2) {
            addCriterion("TRAINING_CITY between", value1, value2, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingCityNotBetween(String value1, String value2) {
            addCriterion("TRAINING_CITY not between", value1, value2, "trainingCity");
            return (Criteria) this;
        }

        public Criteria andTrainingDateIsNull() {
            addCriterion("TRAINING_DATE is null");
            return (Criteria) this;
        }

        public Criteria andTrainingDateIsNotNull() {
            addCriterion("TRAINING_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingDateEqualTo(Date value) {
            addCriterionForJDBCDate("TRAINING_DATE =", value, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("TRAINING_DATE <>", value, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateGreaterThan(Date value) {
            addCriterionForJDBCDate("TRAINING_DATE >", value, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("TRAINING_DATE >=", value, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateLessThan(Date value) {
            addCriterionForJDBCDate("TRAINING_DATE <", value, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("TRAINING_DATE <=", value, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateIn(List<Date> values) {
            addCriterionForJDBCDate("TRAINING_DATE in", values, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("TRAINING_DATE not in", values, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("TRAINING_DATE between", value1, value2, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("TRAINING_DATE not between", value1, value2, "trainingDate");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeIsNull() {
            addCriterion("TRAINING_TIME is null");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeIsNotNull() {
            addCriterion("TRAINING_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeEqualTo(String value) {
            addCriterion("TRAINING_TIME =", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeNotEqualTo(String value) {
            addCriterion("TRAINING_TIME <>", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeGreaterThan(String value) {
            addCriterion("TRAINING_TIME >", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeGreaterThanOrEqualTo(String value) {
            addCriterion("TRAINING_TIME >=", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeLessThan(String value) {
            addCriterion("TRAINING_TIME <", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeLessThanOrEqualTo(String value) {
            addCriterion("TRAINING_TIME <=", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeLike(String value) {
            addCriterion("TRAINING_TIME like", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeNotLike(String value) {
            addCriterion("TRAINING_TIME not like", value, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeIn(List<String> values) {
            addCriterion("TRAINING_TIME in", values, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeNotIn(List<String> values) {
            addCriterion("TRAINING_TIME not in", values, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeBetween(String value1, String value2) {
            addCriterion("TRAINING_TIME between", value1, value2, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingTimeNotBetween(String value1, String value2) {
            addCriterion("TRAINING_TIME not between", value1, value2, "trainingTime");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseIsNull() {
            addCriterion("TRAINING_COURSE is null");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseIsNotNull() {
            addCriterion("TRAINING_COURSE is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseEqualTo(String value) {
            addCriterion("TRAINING_COURSE =", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseNotEqualTo(String value) {
            addCriterion("TRAINING_COURSE <>", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseGreaterThan(String value) {
            addCriterion("TRAINING_COURSE >", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseGreaterThanOrEqualTo(String value) {
            addCriterion("TRAINING_COURSE >=", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseLessThan(String value) {
            addCriterion("TRAINING_COURSE <", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseLessThanOrEqualTo(String value) {
            addCriterion("TRAINING_COURSE <=", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseLike(String value) {
            addCriterion("TRAINING_COURSE like", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseNotLike(String value) {
            addCriterion("TRAINING_COURSE not like", value, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseIn(List<String> values) {
            addCriterion("TRAINING_COURSE in", values, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseNotIn(List<String> values) {
            addCriterion("TRAINING_COURSE not in", values, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseBetween(String value1, String value2) {
            addCriterion("TRAINING_COURSE between", value1, value2, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andTrainingCourseNotBetween(String value1, String value2) {
            addCriterion("TRAINING_COURSE not between", value1, value2, "trainingCourse");
            return (Criteria) this;
        }

        public Criteria andCoachIdIsNull() {
            addCriterion("coach_id is null");
            return (Criteria) this;
        }

        public Criteria andCoachIdIsNotNull() {
            addCriterion("coach_id is not null");
            return (Criteria) this;
        }

        public Criteria andCoachIdEqualTo(String value) {
            addCriterion("coach_id =", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdNotEqualTo(String value) {
            addCriterion("coach_id <>", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdGreaterThan(String value) {
            addCriterion("coach_id >", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdGreaterThanOrEqualTo(String value) {
            addCriterion("coach_id >=", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdLessThan(String value) {
            addCriterion("coach_id <", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdLessThanOrEqualTo(String value) {
            addCriterion("coach_id <=", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdLike(String value) {
            addCriterion("coach_id like", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdNotLike(String value) {
            addCriterion("coach_id not like", value, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdIn(List<String> values) {
            addCriterion("coach_id in", values, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdNotIn(List<String> values) {
            addCriterion("coach_id not in", values, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdBetween(String value1, String value2) {
            addCriterion("coach_id between", value1, value2, "coachId");
            return (Criteria) this;
        }

        public Criteria andCoachIdNotBetween(String value1, String value2) {
            addCriterion("coach_id not between", value1, value2, "coachId");
            return (Criteria) this;
        }

        public Criteria andTrainingCountIsNull() {
            addCriterion("TRAINING_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andTrainingCountIsNotNull() {
            addCriterion("TRAINING_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingCountEqualTo(BigDecimal value) {
            addCriterion("TRAINING_COUNT =", value, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountNotEqualTo(BigDecimal value) {
            addCriterion("TRAINING_COUNT <>", value, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountGreaterThan(BigDecimal value) {
            addCriterion("TRAINING_COUNT >", value, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TRAINING_COUNT >=", value, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountLessThan(BigDecimal value) {
            addCriterion("TRAINING_COUNT <", value, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TRAINING_COUNT <=", value, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountIn(List<BigDecimal> values) {
            addCriterion("TRAINING_COUNT in", values, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountNotIn(List<BigDecimal> values) {
            addCriterion("TRAINING_COUNT not in", values, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TRAINING_COUNT between", value1, value2, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingCountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TRAINING_COUNT not between", value1, value2, "trainingCount");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionIsNull() {
            addCriterion("TRAINING_DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionIsNotNull() {
            addCriterion("TRAINING_DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionEqualTo(String value) {
            addCriterion("TRAINING_DESCRIPTION =", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionNotEqualTo(String value) {
            addCriterion("TRAINING_DESCRIPTION <>", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionGreaterThan(String value) {
            addCriterion("TRAINING_DESCRIPTION >", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("TRAINING_DESCRIPTION >=", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionLessThan(String value) {
            addCriterion("TRAINING_DESCRIPTION <", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionLessThanOrEqualTo(String value) {
            addCriterion("TRAINING_DESCRIPTION <=", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionLike(String value) {
            addCriterion("TRAINING_DESCRIPTION like", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionNotLike(String value) {
            addCriterion("TRAINING_DESCRIPTION not like", value, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionIn(List<String> values) {
            addCriterion("TRAINING_DESCRIPTION in", values, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionNotIn(List<String> values) {
            addCriterion("TRAINING_DESCRIPTION not in", values, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionBetween(String value1, String value2) {
            addCriterion("TRAINING_DESCRIPTION between", value1, value2, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andTrainingDescriptionNotBetween(String value1, String value2) {
            addCriterion("TRAINING_DESCRIPTION not between", value1, value2, "trainingDescription");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampIsNull() {
            addCriterion("LAST_UPDATED_STAMP is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampIsNotNull() {
            addCriterion("LAST_UPDATED_STAMP is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampEqualTo(Date value) {
            addCriterion("LAST_UPDATED_STAMP =", value, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampNotEqualTo(Date value) {
            addCriterion("LAST_UPDATED_STAMP <>", value, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampGreaterThan(Date value) {
            addCriterion("LAST_UPDATED_STAMP >", value, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED_STAMP >=", value, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampLessThan(Date value) {
            addCriterion("LAST_UPDATED_STAMP <", value, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED_STAMP <=", value, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampIn(List<Date> values) {
            addCriterion("LAST_UPDATED_STAMP in", values, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampNotIn(List<Date> values) {
            addCriterion("LAST_UPDATED_STAMP not in", values, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED_STAMP between", value1, value2, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedStampNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED_STAMP not between", value1, value2, "lastUpdatedStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampIsNull() {
            addCriterion("LAST_UPDATED_TX_STAMP is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampIsNotNull() {
            addCriterion("LAST_UPDATED_TX_STAMP is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampEqualTo(Date value) {
            addCriterion("LAST_UPDATED_TX_STAMP =", value, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampNotEqualTo(Date value) {
            addCriterion("LAST_UPDATED_TX_STAMP <>", value, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampGreaterThan(Date value) {
            addCriterion("LAST_UPDATED_TX_STAMP >", value, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED_TX_STAMP >=", value, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampLessThan(Date value) {
            addCriterion("LAST_UPDATED_TX_STAMP <", value, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED_TX_STAMP <=", value, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampIn(List<Date> values) {
            addCriterion("LAST_UPDATED_TX_STAMP in", values, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampNotIn(List<Date> values) {
            addCriterion("LAST_UPDATED_TX_STAMP not in", values, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED_TX_STAMP between", value1, value2, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedTxStampNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED_TX_STAMP not between", value1, value2, "lastUpdatedTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIsNull() {
            addCriterion("CREATED_STAMP is null");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIsNotNull() {
            addCriterion("CREATED_STAMP is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedStampEqualTo(Date value) {
            addCriterion("CREATED_STAMP =", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotEqualTo(Date value) {
            addCriterion("CREATED_STAMP <>", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampGreaterThan(Date value) {
            addCriterion("CREATED_STAMP >", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_STAMP >=", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampLessThan(Date value) {
            addCriterion("CREATED_STAMP <", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_STAMP <=", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIn(List<Date> values) {
            addCriterion("CREATED_STAMP in", values, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotIn(List<Date> values) {
            addCriterion("CREATED_STAMP not in", values, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampBetween(Date value1, Date value2) {
            addCriterion("CREATED_STAMP between", value1, value2, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_STAMP not between", value1, value2, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampIsNull() {
            addCriterion("CREATED_TX_STAMP is null");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampIsNotNull() {
            addCriterion("CREATED_TX_STAMP is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampEqualTo(Date value) {
            addCriterion("CREATED_TX_STAMP =", value, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampNotEqualTo(Date value) {
            addCriterion("CREATED_TX_STAMP <>", value, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampGreaterThan(Date value) {
            addCriterion("CREATED_TX_STAMP >", value, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_TX_STAMP >=", value, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampLessThan(Date value) {
            addCriterion("CREATED_TX_STAMP <", value, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_TX_STAMP <=", value, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampIn(List<Date> values) {
            addCriterion("CREATED_TX_STAMP in", values, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampNotIn(List<Date> values) {
            addCriterion("CREATED_TX_STAMP not in", values, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampBetween(Date value1, Date value2) {
            addCriterion("CREATED_TX_STAMP between", value1, value2, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedTxStampNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_TX_STAMP not between", value1, value2, "createdTxStamp");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdIsNull() {
            addCriterion("TRAINING_SITE_ID is null");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdIsNotNull() {
            addCriterion("TRAINING_SITE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdEqualTo(String value) {
            addCriterion("TRAINING_SITE_ID =", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdNotEqualTo(String value) {
            addCriterion("TRAINING_SITE_ID <>", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdGreaterThan(String value) {
            addCriterion("TRAINING_SITE_ID >", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdGreaterThanOrEqualTo(String value) {
            addCriterion("TRAINING_SITE_ID >=", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdLessThan(String value) {
            addCriterion("TRAINING_SITE_ID <", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdLessThanOrEqualTo(String value) {
            addCriterion("TRAINING_SITE_ID <=", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdLike(String value) {
            addCriterion("TRAINING_SITE_ID like", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdNotLike(String value) {
            addCriterion("TRAINING_SITE_ID not like", value, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdIn(List<String> values) {
            addCriterion("TRAINING_SITE_ID in", values, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdNotIn(List<String> values) {
            addCriterion("TRAINING_SITE_ID not in", values, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdBetween(String value1, String value2) {
            addCriterion("TRAINING_SITE_ID between", value1, value2, "trainingSiteId");
            return (Criteria) this;
        }

        public Criteria andTrainingSiteIdNotBetween(String value1, String value2) {
            addCriterion("TRAINING_SITE_ID not between", value1, value2, "trainingSiteId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ds_training_schedule
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}