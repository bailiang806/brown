package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.CoachSchedule;
import com.happydriving.rockets.server.entity.CoachScheduleExample;

import java.util.LinkedHashMap;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CoachScheduleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    int countByExample(CoachScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    int deleteByExample(CoachScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    @Delete({
        "delete from coach_schedule",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    @Insert({
        "insert into coach_schedule (id, starttime, ",
        "endtime, user_id, ",
        "province_id, city_id, ",
        "county_id, town_id, ",
        "addr_in_detail, cartype_id, ",
        "coursetype_id, created_at, ",
        "updated_at)",
        "values (#{id,jdbcType=INTEGER}, #{starttime,jdbcType=TIMESTAMP}, ",
        "#{endtime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, ",
        "#{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, ",
        "#{countyId,jdbcType=INTEGER}, #{townId,jdbcType=INTEGER}, ",
        "#{addrInDetail,jdbcType=VARCHAR}, #{cartypeId,jdbcType=INTEGER}, ",
        "#{coursetypeId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP})"
    })
    int insert(CoachSchedule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    int insertSelective(CoachSchedule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    List<CoachSchedule> selectByExample(CoachScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, starttime, endtime, user_id, province_id, city_id, county_id, town_id, addr_in_detail, ",
        "cartype_id, coursetype_id, created_at, updated_at",
        "from coach_schedule",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    CoachSchedule selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") CoachSchedule record, @Param("example") CoachScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") CoachSchedule record, @Param("example") CoachScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CoachSchedule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_schedule
     *
     * @mbggenerated
     */
    @Update({
        "update coach_schedule",
        "set starttime = #{starttime,jdbcType=TIMESTAMP},",
          "endtime = #{endtime,jdbcType=TIMESTAMP},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "province_id = #{provinceId,jdbcType=INTEGER},",
          "city_id = #{cityId,jdbcType=INTEGER},",
          "county_id = #{countyId,jdbcType=INTEGER},",
          "town_id = #{townId,jdbcType=INTEGER},",
          "addr_in_detail = #{addrInDetail,jdbcType=VARCHAR},",
          "cartype_id = #{cartypeId,jdbcType=INTEGER},",
          "coursetype_id = #{coursetypeId,jdbcType=INTEGER},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CoachSchedule record);


    //--custom--
    CoachSchedule selectIfScheduleConflict(@Param("coachSchedule") CoachSchedule coachSchedule);

    List<LinkedHashMap> selectScheduleLists(@Param("userId") int userId);
}