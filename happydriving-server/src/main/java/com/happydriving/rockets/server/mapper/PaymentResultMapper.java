package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.PaymentResult;
import com.happydriving.rockets.server.entity.PaymentResultExample;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface PaymentResultMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    int countByExample(PaymentResultExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    int deleteByExample(PaymentResultExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    @Delete({
        "delete from payment_result",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    @Insert({
        "insert into payment_result (id, xueyuan_id, ",
        "coach_product_id, channel, ",
        "out_trade_no, third_party_trade_no, ",
        "trade_state, created_at, ",
        "updated_at)",
        "values (#{id,jdbcType=INTEGER}, #{xueyuanId,jdbcType=INTEGER}, ",
        "#{coachProductId,jdbcType=INTEGER}, #{channel,jdbcType=INTEGER}, ",
        "#{outTradeNo,jdbcType=VARCHAR}, #{thirdPartyTradeNo,jdbcType=VARCHAR}, ",
        "#{tradeState,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP})"
    })
    int insert(PaymentResult record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    int insertSelective(PaymentResult record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    List<PaymentResult> selectByExample(PaymentResultExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, xueyuan_id, coach_product_id, channel, out_trade_no, third_party_trade_no, ",
        "trade_state, created_at, updated_at",
        "from payment_result",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    PaymentResult selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") PaymentResult record, @Param("example") PaymentResultExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") PaymentResult record, @Param("example") PaymentResultExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(PaymentResult record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payment_result
     *
     * @mbggenerated
     */
    @Update({
        "update payment_result",
        "set xueyuan_id = #{xueyuanId,jdbcType=INTEGER},",
          "coach_product_id = #{coachProductId,jdbcType=INTEGER},",
          "channel = #{channel,jdbcType=INTEGER},",
          "out_trade_no = #{outTradeNo,jdbcType=VARCHAR},",
          "third_party_trade_no = #{thirdPartyTradeNo,jdbcType=VARCHAR},",
          "trade_state = #{tradeState,jdbcType=INTEGER},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(PaymentResult record);

    PaymentResult getTradeState(@Param("paymentResult") PaymentResult paymentResult);

    int updateTradeState(@Param("paymentResult") PaymentResult paymentResult);

    LinkedHashMap<String, Object> selectUserAndCoachInfoById(@Param("out_trade_no") String outTradeNo);

    LinkedHashMap<String, Object> selectCoachProductInfoById(@Param("out_trade_no") String outTradeNo);

}