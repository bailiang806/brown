package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.DsTrainingSchedule;
import com.happydriving.rockets.server.entity.DsTrainingScheduleExample;

import java.util.Date;
import java.util.List;

import com.happydriving.rockets.server.model.DsTrainingScheduleInfo;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface DsTrainingScheduleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    int countByExample(DsTrainingScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    int deleteByExample(DsTrainingScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ds_training_schedule",
        "where ID = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ds_training_schedule (ID, TRAINING_CITY, ",
        "TRAINING_DATE, TRAINING_TIME, ",
        "TRAINING_COURSE, coach_id, ",
        "TRAINING_COUNT, TRAINING_DESCRIPTION, ",
        "LAST_UPDATED_STAMP, LAST_UPDATED_TX_STAMP, ",
        "CREATED_STAMP, CREATED_TX_STAMP, ",
        "TRAINING_SITE_ID)",
        "values (#{id,jdbcType=VARCHAR}, #{trainingCity,jdbcType=VARCHAR}, ",
        "#{trainingDate,jdbcType=DATE}, #{trainingTime,jdbcType=VARCHAR}, ",
        "#{trainingCourse,jdbcType=VARCHAR}, #{coachId,jdbcType=VARCHAR}, ",
        "#{trainingCount,jdbcType=DECIMAL}, #{trainingDescription,jdbcType=VARCHAR}, ",
        "#{lastUpdatedStamp,jdbcType=TIMESTAMP}, #{lastUpdatedTxStamp,jdbcType=TIMESTAMP}, ",
        "#{createdStamp,jdbcType=TIMESTAMP}, #{createdTxStamp,jdbcType=TIMESTAMP}, ",
        "#{trainingSiteId,jdbcType=VARCHAR})"
    })
    int insert(DsTrainingSchedule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    int insertSelective(DsTrainingSchedule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    List<DsTrainingSchedule> selectByExample(DsTrainingScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, TRAINING_CITY, TRAINING_DATE, TRAINING_TIME, TRAINING_COURSE, coach_id, ",
        "TRAINING_COUNT, TRAINING_DESCRIPTION, LAST_UPDATED_STAMP, LAST_UPDATED_TX_STAMP, ",
        "CREATED_STAMP, CREATED_TX_STAMP, TRAINING_SITE_ID",
        "from ds_training_schedule",
        "where ID = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    DsTrainingSchedule selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") DsTrainingSchedule record, @Param("example") DsTrainingScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") DsTrainingSchedule record, @Param("example") DsTrainingScheduleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(DsTrainingSchedule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_training_schedule
     *
     * @mbggenerated
     */
    @Update({
        "update ds_training_schedule",
        "set TRAINING_CITY = #{trainingCity,jdbcType=VARCHAR},",
          "TRAINING_DATE = #{trainingDate,jdbcType=DATE},",
          "TRAINING_TIME = #{trainingTime,jdbcType=VARCHAR},",
          "TRAINING_COURSE = #{trainingCourse,jdbcType=VARCHAR},",
          "coach_id = #{coachId,jdbcType=VARCHAR},",
          "TRAINING_COUNT = #{trainingCount,jdbcType=DECIMAL},",
          "TRAINING_DESCRIPTION = #{trainingDescription,jdbcType=VARCHAR},",
          "LAST_UPDATED_STAMP = #{lastUpdatedStamp,jdbcType=TIMESTAMP},",
          "LAST_UPDATED_TX_STAMP = #{lastUpdatedTxStamp,jdbcType=TIMESTAMP},",
          "CREATED_STAMP = #{createdStamp,jdbcType=TIMESTAMP},",
          "CREATED_TX_STAMP = #{createdTxStamp,jdbcType=TIMESTAMP},",
          "TRAINING_SITE_ID = #{trainingSiteId,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(DsTrainingSchedule record);
    /**
     * 根据课程类型和日期，得到该日期及日期之后的课程，按时间递增排序
     * @param courseType
     * @param date
     * @return
     */
    List<DsTrainingScheduleInfo> getCoursesByTypeAndStartDate(@Param("courseType")String courseType,@Param("date")Date date);

    /**
     * 根据课程id得到课程的剩余数量
     * @param courseId
     * @return
     */
    Integer getCourseResidualCapacity(@Param("courseId") String courseId);

    /**
     * 根据学生id，日期，得到学生预约的今天及今天之后的课程
     * @param studentId
     * @param date
     * @return
     */
    List<DsTrainingScheduleInfo> getSelectedCourseByStudentId(@Param("studentId") String studentId,@Param("date") Date date);

    /**
     *
     */
    DsTrainingScheduleInfo getCourseDetailByCourseId(@Param("courseId")String courseId);
}