package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.DsSignupStudent;
import com.happydriving.rockets.server.entity.DsSignupStudentExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface DsSignupStudentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    int countByExample(DsSignupStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    int deleteByExample(DsSignupStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    @Delete({
            "delete from ds_signup_student",
            "where ID = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    @Insert({
            "insert into ds_signup_student (ID, SERVICE_CITY_ID, ",
            "SIGNUP_STORE, NAME, ",
            "ID_CARD, PHONE, CAR_TYPE, ",
            "SIGNUP_FEE, PAY_METHOD, ",
            "PAY_FORM, PAYED_FEE, ",
            "SIGNUP_DATE, STUDY_PROGRESS, ",
            "DRIVING_SCHOOL_ID, LOCAL_TRAIN, ",
            "TRAIN_TYPE, INFO_CHANNEL, ",
            "TRAINING_SITE_ID, CONSULTANT_ID, ",
            "REFERRER_ID, NEXT_VISIT_DATE, ",
            "STUDENT_STATUS, COMMENT, ",
            "COURSE1_TIME, COURSE2_TIME, ",
            "COURSE3_TIME, IS_ID_CARD_TABLE, ",
            "IS_BODY_CHECK_TABLE, IS_SIGNUP_TABLE, ",
            "IS_PERSONAL_PHOTO, IS_CONTRACT_TABLE, ",
            "IS_RECEIPT, IS_FINGER, IS_GIVEN_MATERIAL, ",
            "IS_URGENT, HANDLE_BY, ",
            "COMMISSION_FEE, IS_COMMISSION_PAYED, ",
            "LAST_UPDATED_STAMP, LAST_UPDATED_TX_STAMP, ",
            "CREATED_STAMP, CREATED_TX_STAMP, ",
            "USER_LOGIN_ID, IS_EXAM_FEE_PAYED, ",
            "RECORD, COURSE3_HOUR, ",
            "COURSE2_HOUR)",
            "values (#{id,jdbcType=VARCHAR}, #{serviceCityId,jdbcType=VARCHAR}, ",
            "#{signupStore,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
            "#{idCard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{carType,jdbcType=VARCHAR}, ",
            "#{signupFee,jdbcType=DECIMAL}, #{payMethod,jdbcType=VARCHAR}, ",
            "#{payForm,jdbcType=VARCHAR}, #{payedFee,jdbcType=DECIMAL}, ",
            "#{signupDate,jdbcType=DATE}, #{studyProgress,jdbcType=VARCHAR}, ",
            "#{drivingSchoolId,jdbcType=VARCHAR}, #{localTrain,jdbcType=VARCHAR}, ",
            "#{trainType,jdbcType=VARCHAR}, #{infoChannel,jdbcType=VARCHAR}, ",
            "#{trainingSiteId,jdbcType=VARCHAR}, #{consultantId,jdbcType=VARCHAR}, ",
            "#{referrerId,jdbcType=VARCHAR}, #{nextVisitDate,jdbcType=DATE}, ",
            "#{studentStatus,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, ",
            "#{course1Time,jdbcType=DECIMAL}, #{course2Time,jdbcType=DECIMAL}, ",
            "#{course3Time,jdbcType=DECIMAL}, #{isIdCardTable,jdbcType=CHAR}, ",
            "#{isBodyCheckTable,jdbcType=CHAR}, #{isSignupTable,jdbcType=CHAR}, ",
            "#{isPersonalPhoto,jdbcType=CHAR}, #{isContractTable,jdbcType=CHAR}, ",
            "#{isReceipt,jdbcType=CHAR}, #{isFinger,jdbcType=CHAR}, #{isGivenMaterial,jdbcType=CHAR}, ",
            "#{isUrgent,jdbcType=CHAR}, #{handleBy,jdbcType=VARCHAR}, ",
            "#{commissionFee,jdbcType=DECIMAL}, #{isCommissionPayed,jdbcType=CHAR}, ",
            "#{lastUpdatedStamp,jdbcType=TIMESTAMP}, #{lastUpdatedTxStamp,jdbcType=TIMESTAMP}, ",
            "#{createdStamp,jdbcType=TIMESTAMP}, #{createdTxStamp,jdbcType=TIMESTAMP}, ",
            "#{userLoginId,jdbcType=VARCHAR}, #{isExamFeePayed,jdbcType=CHAR}, ",
            "#{record,jdbcType=VARCHAR}, #{course3Hour,jdbcType=DECIMAL}, ",
            "#{course2Hour,jdbcType=DECIMAL})"
    })
    int insert(DsSignupStudent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    int insertSelective(DsSignupStudent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    List<DsSignupStudent> selectByExample(DsSignupStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "ID, SERVICE_CITY_ID, SIGNUP_STORE, NAME, ID_CARD, PHONE, CAR_TYPE, SIGNUP_FEE, ",
            "PAY_METHOD, PAY_FORM, PAYED_FEE, SIGNUP_DATE, STUDY_PROGRESS, DRIVING_SCHOOL_ID, ",
            "LOCAL_TRAIN, TRAIN_TYPE, INFO_CHANNEL, TRAINING_SITE_ID, CONSULTANT_ID, REFERRER_ID, ",
            "NEXT_VISIT_DATE, STUDENT_STATUS, COMMENT, COURSE1_TIME, COURSE2_TIME, COURSE3_TIME, ",
            "IS_ID_CARD_TABLE, IS_BODY_CHECK_TABLE, IS_SIGNUP_TABLE, IS_PERSONAL_PHOTO, IS_CONTRACT_TABLE, ",
            "IS_RECEIPT, IS_FINGER, IS_GIVEN_MATERIAL, IS_URGENT, HANDLE_BY, COMMISSION_FEE, ",
            "IS_COMMISSION_PAYED, LAST_UPDATED_STAMP, LAST_UPDATED_TX_STAMP, CREATED_STAMP, ",
            "CREATED_TX_STAMP, USER_LOGIN_ID, IS_EXAM_FEE_PAYED, RECORD, COURSE3_HOUR, COURSE2_HOUR",
            "from ds_signup_student",
            "where ID = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    DsSignupStudent selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") DsSignupStudent record, @Param("example") DsSignupStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") DsSignupStudent record, @Param("example") DsSignupStudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(DsSignupStudent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_signup_student
     *
     * @mbggenerated
     */
    @Update({
            "update ds_signup_student",
            "set SERVICE_CITY_ID = #{serviceCityId,jdbcType=VARCHAR},",
            "SIGNUP_STORE = #{signupStore,jdbcType=VARCHAR},",
            "NAME = #{name,jdbcType=VARCHAR},",
            "ID_CARD = #{idCard,jdbcType=VARCHAR},",
            "PHONE = #{phone,jdbcType=VARCHAR},",
            "CAR_TYPE = #{carType,jdbcType=VARCHAR},",
            "SIGNUP_FEE = #{signupFee,jdbcType=DECIMAL},",
            "PAY_METHOD = #{payMethod,jdbcType=VARCHAR},",
            "PAY_FORM = #{payForm,jdbcType=VARCHAR},",
            "PAYED_FEE = #{payedFee,jdbcType=DECIMAL},",
            "SIGNUP_DATE = #{signupDate,jdbcType=DATE},",
            "STUDY_PROGRESS = #{studyProgress,jdbcType=VARCHAR},",
            "DRIVING_SCHOOL_ID = #{drivingSchoolId,jdbcType=VARCHAR},",
            "LOCAL_TRAIN = #{localTrain,jdbcType=VARCHAR},",
            "TRAIN_TYPE = #{trainType,jdbcType=VARCHAR},",
            "INFO_CHANNEL = #{infoChannel,jdbcType=VARCHAR},",
            "TRAINING_SITE_ID = #{trainingSiteId,jdbcType=VARCHAR},",
            "CONSULTANT_ID = #{consultantId,jdbcType=VARCHAR},",
            "REFERRER_ID = #{referrerId,jdbcType=VARCHAR},",
            "NEXT_VISIT_DATE = #{nextVisitDate,jdbcType=DATE},",
            "STUDENT_STATUS = #{studentStatus,jdbcType=VARCHAR},",
            "COMMENT = #{comment,jdbcType=VARCHAR},",
            "COURSE1_TIME = #{course1Time,jdbcType=DECIMAL},",
            "COURSE2_TIME = #{course2Time,jdbcType=DECIMAL},",
            "COURSE3_TIME = #{course3Time,jdbcType=DECIMAL},",
            "IS_ID_CARD_TABLE = #{isIdCardTable,jdbcType=CHAR},",
            "IS_BODY_CHECK_TABLE = #{isBodyCheckTable,jdbcType=CHAR},",
            "IS_SIGNUP_TABLE = #{isSignupTable,jdbcType=CHAR},",
            "IS_PERSONAL_PHOTO = #{isPersonalPhoto,jdbcType=CHAR},",
            "IS_CONTRACT_TABLE = #{isContractTable,jdbcType=CHAR},",
            "IS_RECEIPT = #{isReceipt,jdbcType=CHAR},",
            "IS_FINGER = #{isFinger,jdbcType=CHAR},",
            "IS_GIVEN_MATERIAL = #{isGivenMaterial,jdbcType=CHAR},",
            "IS_URGENT = #{isUrgent,jdbcType=CHAR},",
            "HANDLE_BY = #{handleBy,jdbcType=VARCHAR},",
            "COMMISSION_FEE = #{commissionFee,jdbcType=DECIMAL},",
            "IS_COMMISSION_PAYED = #{isCommissionPayed,jdbcType=CHAR},",
            "LAST_UPDATED_STAMP = #{lastUpdatedStamp,jdbcType=TIMESTAMP},",
            "LAST_UPDATED_TX_STAMP = #{lastUpdatedTxStamp,jdbcType=TIMESTAMP},",
            "CREATED_STAMP = #{createdStamp,jdbcType=TIMESTAMP},",
            "CREATED_TX_STAMP = #{createdTxStamp,jdbcType=TIMESTAMP},",
            "USER_LOGIN_ID = #{userLoginId,jdbcType=VARCHAR},",
            "IS_EXAM_FEE_PAYED = #{isExamFeePayed,jdbcType=CHAR},",
            "RECORD = #{record,jdbcType=VARCHAR},",
            "COURSE3_HOUR = #{course3Hour,jdbcType=DECIMAL},",
            "COURSE2_HOUR = #{course2Hour,jdbcType=DECIMAL}",
            "where ID = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(DsSignupStudent record);

    List<DsSignupStudent> getDsSignupStudentDetailInfoByPhone(@Param("phone") String phone);
}