package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.DrivingSchool;
import com.happydriving.rockets.server.entity.DrivingSchoolExample;
import com.happydriving.rockets.server.model.DrivingSchoolDetailInfo;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface DrivingSchoolMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    int countByExample(DrivingSchoolExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    int deleteByExample(DrivingSchoolExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    @Delete({
            "delete from driving_school",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    @Insert({
            "insert into driving_school (id, service_city_id, ",
            "school_name, level, ",
            "address, latitude, ",
            "longitude, LAST_UPDATED_TX_STAMP, ",
            "LAST_UPDATED_STAMP, CREATED_STAMP, ",
            "LONGTITUDE, CREATED_TX_STAMP, ",
            "is_hide, can_select, ",
            "price, school_detail, ",
            "school_imgurl, school_avator, ",
            "school_hd, school_index, ",
            "short_address, register_number, ",
            "bus_line, practice_arrangement, ",
            "car_number, area, ",
            "location_number, score, ",
            "phone)",
            "values (#{id,jdbcType=INTEGER}, #{serviceCityId,jdbcType=INTEGER}, ",
            "#{schoolName,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, ",
            "#{address,jdbcType=VARCHAR}, #{latitude,jdbcType=DECIMAL}, ",
            "#{longitude,jdbcType=DECIMAL}, #{lastUpdatedTxStamp,jdbcType=TIMESTAMP}, ",
            "#{lastUpdatedStamp,jdbcType=TIMESTAMP}, #{createdStamp,jdbcType=TIMESTAMP}, ",
            "#{longtitude,jdbcType=DECIMAL}, #{createdTxStamp,jdbcType=TIMESTAMP}, ",
            "#{isHide,jdbcType=VARCHAR}, #{canSelect,jdbcType=VARCHAR}, ",
            "#{price,jdbcType=DECIMAL}, #{schoolDetail,jdbcType=VARCHAR}, ",
            "#{schoolImgurl,jdbcType=VARCHAR}, #{schoolAvator,jdbcType=VARCHAR}, ",
            "#{schoolHd,jdbcType=VARCHAR}, #{schoolIndex,jdbcType=VARCHAR}, ",
            "#{shortAddress,jdbcType=VARCHAR}, #{registerNumber,jdbcType=INTEGER}, ",
            "#{busLine,jdbcType=VARCHAR}, #{practiceArrangement,jdbcType=VARCHAR}, ",
            "#{carNumber,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR}, ",
            "#{locationNumber,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, ",
            "#{phone,jdbcType=VARCHAR})"
    })
    int insert(DrivingSchool record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    int insertSelective(DrivingSchool record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    List<DrivingSchool> selectByExample(DrivingSchoolExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "id, service_city_id, school_name, level, address, latitude, longitude, LAST_UPDATED_TX_STAMP, ",
            "LAST_UPDATED_STAMP, CREATED_STAMP, LONGTITUDE, CREATED_TX_STAMP, is_hide, can_select, ",
            "price, school_detail, school_imgurl, school_avator, school_hd, school_index, ",
            "short_address, register_number, bus_line, practice_arrangement, car_number, ",
            "area, location_number, score, phone",
            "from driving_school",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    DrivingSchool selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") DrivingSchool record, @Param("example") DrivingSchoolExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") DrivingSchool record, @Param("example") DrivingSchoolExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(DrivingSchool record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school
     *
     * @mbggenerated
     */
    @Update({
            "update driving_school",
            "set service_city_id = #{serviceCityId,jdbcType=INTEGER},",
            "school_name = #{schoolName,jdbcType=VARCHAR},",
            "level = #{level,jdbcType=VARCHAR},",
            "address = #{address,jdbcType=VARCHAR},",
            "latitude = #{latitude,jdbcType=DECIMAL},",
            "longitude = #{longitude,jdbcType=DECIMAL},",
            "LAST_UPDATED_TX_STAMP = #{lastUpdatedTxStamp,jdbcType=TIMESTAMP},",
            "LAST_UPDATED_STAMP = #{lastUpdatedStamp,jdbcType=TIMESTAMP},",
            "CREATED_STAMP = #{createdStamp,jdbcType=TIMESTAMP},",
            "LONGTITUDE = #{longtitude,jdbcType=DECIMAL},",
            "CREATED_TX_STAMP = #{createdTxStamp,jdbcType=TIMESTAMP},",
            "is_hide = #{isHide,jdbcType=VARCHAR},",
            "can_select = #{canSelect,jdbcType=VARCHAR},",
            "price = #{price,jdbcType=DECIMAL},",
            "school_detail = #{schoolDetail,jdbcType=VARCHAR},",
            "school_imgurl = #{schoolImgurl,jdbcType=VARCHAR},",
            "school_avator = #{schoolAvator,jdbcType=VARCHAR},",
            "school_hd = #{schoolHd,jdbcType=VARCHAR},",
            "school_index = #{schoolIndex,jdbcType=VARCHAR},",
            "short_address = #{shortAddress,jdbcType=VARCHAR},",
            "register_number = #{registerNumber,jdbcType=INTEGER},",
            "bus_line = #{busLine,jdbcType=VARCHAR},",
            "practice_arrangement = #{practiceArrangement,jdbcType=VARCHAR},",
            "car_number = #{carNumber,jdbcType=INTEGER},",
            "area = #{area,jdbcType=VARCHAR},",
            "location_number = #{locationNumber,jdbcType=INTEGER},",
            "score = #{score,jdbcType=INTEGER},",
            "phone = #{phone,jdbcType=VARCHAR}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(DrivingSchool record);


    int insertAndGetId(DrivingSchool drivingSchool);

    List<DrivingSchoolDetailInfo> getDrivingSchoolDetailByCityId(int cityId);
    DrivingSchoolDetailInfo getDrivingSchoolDetailBySchoolId(int schoolId);

}