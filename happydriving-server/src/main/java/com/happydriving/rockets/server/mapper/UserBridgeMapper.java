package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.UserBridge;
import com.happydriving.rockets.server.entity.UserBridgeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserBridgeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    int countByExample(UserBridgeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    int deleteByExample(UserBridgeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    @Delete({
        "delete from user_bridge",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    @Insert({
        "insert into user_bridge (id, open_id, ",
        "union_id, nickname, ",
        "phone, sex, city, ",
        "province, country, ",
        "subscribe_time, created_at, ",
        "updated_at)",
        "values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, ",
        "#{unionId,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, ",
        "#{province,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, ",
        "#{subscribeTime,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP})"
    })
    int insert(UserBridge record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    int insertSelective(UserBridge record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    List<UserBridge> selectByExample(UserBridgeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, open_id, union_id, nickname, phone, sex, city, province, country, subscribe_time, ",
        "created_at, updated_at",
        "from user_bridge",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    UserBridge selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") UserBridge record, @Param("example") UserBridgeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") UserBridge record, @Param("example") UserBridgeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserBridge record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_bridge
     *
     * @mbggenerated
     */
    @Update({
        "update user_bridge",
        "set open_id = #{openId,jdbcType=VARCHAR},",
          "union_id = #{unionId,jdbcType=VARCHAR},",
          "nickname = #{nickname,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "country = #{country,jdbcType=VARCHAR},",
          "subscribe_time = #{subscribeTime,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserBridge record);

    UserBridge selectByUserId(@Param("user_id") int user_id);
}