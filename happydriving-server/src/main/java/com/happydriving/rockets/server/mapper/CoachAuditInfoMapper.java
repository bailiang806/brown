package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.CoachAuditInfo;
import com.happydriving.rockets.server.entity.CoachAuditInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CoachAuditInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    int countByExample(CoachAuditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    int deleteByExample(CoachAuditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    @Delete({
        "delete from coach_auditinfo",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    @Insert({
        "insert into coach_auditinfo (ID, user_id, ",
        "audit_admin, audit_status, ",
        "audit_message, audit_at, ",
        "mark, label)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{auditAdmin,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR}, ",
        "#{auditMessage,jdbcType=VARCHAR}, #{auditAt,jdbcType=TIMESTAMP}, ",
        "#{mark,jdbcType=BIT}, #{label,jdbcType=VARCHAR})"
    })
    int insert(CoachAuditInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    int insertSelective(CoachAuditInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    List<CoachAuditInfo> selectByExample(CoachAuditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, user_id, audit_admin, audit_status, audit_message, audit_at, mark, label",
        "from coach_auditinfo",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    CoachAuditInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") CoachAuditInfo record, @Param("example") CoachAuditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") CoachAuditInfo record, @Param("example") CoachAuditInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CoachAuditInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_auditinfo
     *
     * @mbggenerated
     */
    @Update({
        "update coach_auditinfo",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "audit_admin = #{auditAdmin,jdbcType=VARCHAR},",
          "audit_status = #{auditStatus,jdbcType=VARCHAR},",
          "audit_message = #{auditMessage,jdbcType=VARCHAR},",
          "audit_at = #{auditAt,jdbcType=TIMESTAMP},",
          "mark = #{mark,jdbcType=BIT},",
          "label = #{label,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CoachAuditInfo record);
}