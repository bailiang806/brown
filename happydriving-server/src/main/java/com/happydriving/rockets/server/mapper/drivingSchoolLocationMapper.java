package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.drivingSchoolLocation;
import com.happydriving.rockets.server.entity.drivingSchoolLocationExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface drivingSchoolLocationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    int countByExample(drivingSchoolLocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    int deleteByExample(drivingSchoolLocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    @Delete({
        "delete from driving_school_location",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    @Insert({
        "insert into driving_school_location (id, t1, ",
        "t2, t3, t4, ",
        "address, latitude, ",
        "longitude)",
        "values (#{id,jdbcType=INTEGER}, #{t1,jdbcType=VARCHAR}, ",
        "#{t2,jdbcType=VARCHAR}, #{t3,jdbcType=VARCHAR}, #{t4,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR}, #{latitude,jdbcType=DECIMAL}, ",
        "#{longitude,jdbcType=DECIMAL})"
    })
    int insert(drivingSchoolLocation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    int insertSelective(drivingSchoolLocation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    List<drivingSchoolLocation> selectByExample(drivingSchoolLocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, t1, t2, t3, t4, address, latitude, longitude",
        "from driving_school_location",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    drivingSchoolLocation selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") drivingSchoolLocation record, @Param("example") drivingSchoolLocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") drivingSchoolLocation record, @Param("example") drivingSchoolLocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(drivingSchoolLocation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table driving_school_location
     *
     * @mbggenerated
     */
    @Update({
        "update driving_school_location",
        "set t1 = #{t1,jdbcType=VARCHAR},",
          "t2 = #{t2,jdbcType=VARCHAR},",
          "t3 = #{t3,jdbcType=VARCHAR},",
          "t4 = #{t4,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "latitude = #{latitude,jdbcType=DECIMAL},",
          "longitude = #{longitude,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(drivingSchoolLocation record);
}