package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.DsStudentReservation;
import com.happydriving.rockets.server.entity.DsStudentReservationExample;

import java.util.Date;
import java.util.List;

import com.happydriving.rockets.server.model.TrainingTaskInfo;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface DsStudentReservationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    int countByExample(DsStudentReservationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    int deleteByExample(DsStudentReservationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ds_student_reservation",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ds_student_reservation (id, student_id, ",
        "course_id, LAST_UPDATED_TX_STAMP, ",
        "LAST_UPDATED_STAMP, CREATED_STAMP, ",
        "CREATED_TX_STAMP)",
        "values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, ",
        "#{courseId,jdbcType=VARCHAR}, #{lastUpdatedTxStamp,jdbcType=TIMESTAMP}, ",
        "#{lastUpdatedStamp,jdbcType=TIMESTAMP}, #{createdStamp,jdbcType=TIMESTAMP}, ",
        "#{createdTxStamp,jdbcType=TIMESTAMP})"
    })
    int insert(DsStudentReservation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    int insertSelective(DsStudentReservation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    List<DsStudentReservation> selectByExample(DsStudentReservationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, student_id, course_id, LAST_UPDATED_TX_STAMP, LAST_UPDATED_STAMP, CREATED_STAMP, ",
        "CREATED_TX_STAMP",
        "from ds_student_reservation",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    DsStudentReservation selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") DsStudentReservation record, @Param("example") DsStudentReservationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") DsStudentReservation record, @Param("example") DsStudentReservationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(DsStudentReservation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ds_student_reservation
     *
     * @mbggenerated
     */
    @Update({
        "update ds_student_reservation",
        "set student_id = #{studentId,jdbcType=VARCHAR},",
          "course_id = #{courseId,jdbcType=VARCHAR},",
          "LAST_UPDATED_TX_STAMP = #{lastUpdatedTxStamp,jdbcType=TIMESTAMP},",
          "LAST_UPDATED_STAMP = #{lastUpdatedStamp,jdbcType=TIMESTAMP},",
          "CREATED_STAMP = #{createdStamp,jdbcType=TIMESTAMP},",
          "CREATED_TX_STAMP = #{createdTxStamp,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(DsStudentReservation record);
    List<TrainingTaskInfo> getTrainingTaskInfoByDateAndCity(@Param("date")Date date,@Param("cityId")String cityId);
}