package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.Coach;
import com.happydriving.rockets.server.entity.CoachExample;
import com.happydriving.rockets.server.model.*;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface CoachMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    int countByExample(CoachExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    int deleteByExample(CoachExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    @Delete({
            "delete from coach",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    @Insert({
            "insert into coach (id, created_at, ",
            "updated_at, name, ",
            "urgent_name, urgent_phone, ",
            "address, comment, ",
            "shenhe, t1, t2, ",
            "t3, t4, school_id, ",
            "qq, kaihh, kaihm, ",
            "kahao, personalitytest, ",
            "city_id, sex, student_count, ",
            "passing_rate, phone, ",
            "is_hide, LAST_UPDATED_STAMP, ",
            "CREATED_TX_STAMP, LAST_UPDATED_TX_STAMP, ",
            "CREATED_STAMP, training_site_id, ",
            "user_id, training_course, ",
            "upload_photo, personal_photo, ",
            "id_card_positive_photo, id_card_negative_photo, ",
            "driving_licence_photo, car_running_photo, ",
            "coach_certificate_photo, operation_certificate_photo, ",
            "coach_hd)",
            "values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, ",
            "#{updatedAt,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, ",
            "#{urgentName,jdbcType=VARCHAR}, #{urgentPhone,jdbcType=VARCHAR}, ",
            "#{address,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, ",
            "#{shenhe,jdbcType=VARCHAR}, #{t1,jdbcType=VARCHAR}, #{t2,jdbcType=VARCHAR}, ",
            "#{t3,jdbcType=VARCHAR}, #{t4,jdbcType=VARCHAR}, #{schoolId,jdbcType=INTEGER}, ",
            "#{qq,jdbcType=VARCHAR}, #{kaihh,jdbcType=VARCHAR}, #{kaihm,jdbcType=VARCHAR}, ",
            "#{kahao,jdbcType=VARCHAR}, #{personalitytest,jdbcType=VARCHAR}, ",
            "#{cityId,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{studentCount,jdbcType=INTEGER}, ",
            "#{passingRate,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, ",
            "#{isHide,jdbcType=VARCHAR}, #{lastUpdatedStamp,jdbcType=TIMESTAMP}, ",
            "#{createdTxStamp,jdbcType=TIMESTAMP}, #{lastUpdatedTxStamp,jdbcType=TIMESTAMP}, ",
            "#{createdStamp,jdbcType=TIMESTAMP}, #{trainingSiteId,jdbcType=VARCHAR}, ",
            "#{userId,jdbcType=INTEGER}, #{trainingCourse,jdbcType=VARCHAR}, ",
            "#{uploadPhoto,jdbcType=VARCHAR}, #{personalPhoto,jdbcType=VARCHAR}, ",
            "#{idCardPositivePhoto,jdbcType=VARCHAR}, #{idCardNegativePhoto,jdbcType=VARCHAR}, ",
            "#{drivingLicencePhoto,jdbcType=VARCHAR}, #{carRunningPhoto,jdbcType=VARCHAR}, ",
            "#{coachCertificatePhoto,jdbcType=VARCHAR}, #{operationCertificatePhoto,jdbcType=VARCHAR}, ",
            "#{coachHd,jdbcType=VARCHAR})"
    })
    int insert(Coach record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    int insertSelective(Coach record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    List<Coach> selectByExample(CoachExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "id, created_at, updated_at, name, urgent_name, urgent_phone, address, comment, ",
            "shenhe, t1, t2, t3, t4, school_id, qq, kaihh, kaihm, kahao, personalitytest, ",
            "city_id, sex, student_count, passing_rate, phone, is_hide, LAST_UPDATED_STAMP, ",
            "CREATED_TX_STAMP, LAST_UPDATED_TX_STAMP, CREATED_STAMP, training_site_id, user_id, ",
            "training_course, upload_photo, personal_photo, id_card_positive_photo, id_card_negative_photo, ",
            "driving_licence_photo, car_running_photo, coach_certificate_photo, operation_certificate_photo, ",
            "coach_hd",
            "from coach",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Coach selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Coach record, @Param("example") CoachExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Coach record, @Param("example") CoachExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Coach record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach
     *
     * @mbggenerated
     */
    @Update({
            "update coach",
            "set created_at = #{createdAt,jdbcType=TIMESTAMP},",
            "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
            "name = #{name,jdbcType=VARCHAR},",
            "urgent_name = #{urgentName,jdbcType=VARCHAR},",
            "urgent_phone = #{urgentPhone,jdbcType=VARCHAR},",
            "address = #{address,jdbcType=VARCHAR},",
            "comment = #{comment,jdbcType=VARCHAR},",
            "shenhe = #{shenhe,jdbcType=VARCHAR},",
            "t1 = #{t1,jdbcType=VARCHAR},",
            "t2 = #{t2,jdbcType=VARCHAR},",
            "t3 = #{t3,jdbcType=VARCHAR},",
            "t4 = #{t4,jdbcType=VARCHAR},",
            "school_id = #{schoolId,jdbcType=INTEGER},",
            "qq = #{qq,jdbcType=VARCHAR},",
            "kaihh = #{kaihh,jdbcType=VARCHAR},",
            "kaihm = #{kaihm,jdbcType=VARCHAR},",
            "kahao = #{kahao,jdbcType=VARCHAR},",
            "personalitytest = #{personalitytest,jdbcType=VARCHAR},",
            "city_id = #{cityId,jdbcType=INTEGER},",
            "sex = #{sex,jdbcType=VARCHAR},",
            "student_count = #{studentCount,jdbcType=INTEGER},",
            "passing_rate = #{passingRate,jdbcType=INTEGER},",
            "phone = #{phone,jdbcType=VARCHAR},",
            "is_hide = #{isHide,jdbcType=VARCHAR},",
            "LAST_UPDATED_STAMP = #{lastUpdatedStamp,jdbcType=TIMESTAMP},",
            "CREATED_TX_STAMP = #{createdTxStamp,jdbcType=TIMESTAMP},",
            "LAST_UPDATED_TX_STAMP = #{lastUpdatedTxStamp,jdbcType=TIMESTAMP},",
            "CREATED_STAMP = #{createdStamp,jdbcType=TIMESTAMP},",
            "training_site_id = #{trainingSiteId,jdbcType=VARCHAR},",
            "user_id = #{userId,jdbcType=INTEGER},",
            "training_course = #{trainingCourse,jdbcType=VARCHAR},",
            "upload_photo = #{uploadPhoto,jdbcType=VARCHAR},",
            "personal_photo = #{personalPhoto,jdbcType=VARCHAR},",
            "id_card_positive_photo = #{idCardPositivePhoto,jdbcType=VARCHAR},",
            "id_card_negative_photo = #{idCardNegativePhoto,jdbcType=VARCHAR},",
            "driving_licence_photo = #{drivingLicencePhoto,jdbcType=VARCHAR},",
            "car_running_photo = #{carRunningPhoto,jdbcType=VARCHAR},",
            "coach_certificate_photo = #{coachCertificatePhoto,jdbcType=VARCHAR},",
            "operation_certificate_photo = #{operationCertificatePhoto,jdbcType=VARCHAR},",
            "coach_hd = #{coachHd,jdbcType=VARCHAR}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Coach record);
//    int insertAndGetId(Coach record);

    List<CoachDetailInfo> getCoachDetailInfoByUserId(@Param("userId") int userId);

    List<CoachDetailInfo> getCoachDetailInfoList();

    //    List<CoachDetailInfo> getSubmitCoachDetailInfoList();

    List<CoachTopCountQueryInfo> getCoachTopCountBasicInfos();

    CoachTopCountQueryInfo getCoachQueryInfo(@Param("coachId") int coachId);

    List<CoachLocations> getCoachLocations();

    void  updatePersonalTest(@Param("pics") String pics, @Param("userId") String studentId);

    CoachPersonalDisplayInfo getCoachPersonalDisplayInfo(@Param("userId") int userId);

    List<CoachDisplayDetailInfo> getCoachDisplayDetailInfoByCity(@Param("cityId") int cityId);

    CoachDisplayDetailInfo getCoachDisplayDetailInfoByCoachId(@Param("coachId") int coachId);
}