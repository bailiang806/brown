package com.happydriving.rockets.server.mapper;

import com.happydriving.rockets.server.entity.SmsValidation;
import com.happydriving.rockets.server.entity.SmsValidationExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface SmsValidationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    int countByExample(SmsValidationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    int deleteByExample(SmsValidationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    @Delete({
        "delete from sms_validation",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    @Insert({
        "insert into sms_validation (id, phone, ",
        "random_code, created_at)",
        "values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, ",
        "#{randomCode,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(SmsValidation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    int insertSelective(SmsValidation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    List<SmsValidation> selectByExample(SmsValidationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, phone, random_code, created_at",
        "from sms_validation",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    SmsValidation selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") SmsValidation record, @Param("example") SmsValidationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") SmsValidation record, @Param("example") SmsValidationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(SmsValidation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_validation
     *
     * @mbggenerated
     */
    @Update({
        "update sms_validation",
        "set phone = #{phone,jdbcType=VARCHAR},",
          "random_code = #{randomCode,jdbcType=VARCHAR},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SmsValidation record);



    int insertOrUpdateIfNotExists(@Param("sv") SmsValidation smsValidation);
}