<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.happydriving.rockets.server.mapper.StudentInfoMapper">
  <resultMap id="BaseResultMap" type="com.happydriving.rockets.server.entity.StudentInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="urgent_name" jdbcType="VARCHAR" property="urgentName" />
    <result column="urgent_phone" jdbcType="VARCHAR" property="urgentPhone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="banji_id" jdbcType="INTEGER" property="banjiId" />
    <result column="chexing_id" jdbcType="INTEGER" property="chexingId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="shenhe" jdbcType="VARCHAR" property="shenhe" />
    <result column="t1" jdbcType="VARCHAR" property="t1" />
    <result column="t2" jdbcType="VARCHAR" property="t2" />
    <result column="t3" jdbcType="VARCHAR" property="t3" />
    <result column="t4" jdbcType="VARCHAR" property="t4" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="shenfenzheng" jdbcType="VARCHAR" property="shenfenzheng" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="personalitytest" jdbcType="VARCHAR" property="personalitytest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, urgent_name, urgent_phone, address,
    banji_id, chexing_id, created_at, updated_at, shenhe, t1, t2, t3, t4, photo,
    shenfenzheng, product_id,personalitytest, user_id
  </sql>
  <select id="selectByExample" parameterType="com.happydriving.rockets.server.entity.StudentInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.happydriving.rockets.server.entity.StudentInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.happydriving.rockets.server.entity.StudentInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="urgentName != null">
        urgent_name,
      </if>
      <if test="urgentPhone != null">
        urgent_phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="banjiId != null">
        banji_id,
      </if>
      <if test="chexingId != null">
        chexing_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="shenhe != null">
        shenhe,
      </if>
      <if test="t1 != null">
        t1,
      </if>
      <if test="t2 != null">
        t2,
      </if>
      <if test="t3 != null">
        t3,
      </if>
      <if test="t4 != null">
        t4,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="shenfenzheng != null">
        shenfenzheng,
      </if>
      <if test="productId != null">
        product_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="urgentName != null">
        #{urgentName,jdbcType=VARCHAR},
      </if>
      <if test="urgentPhone != null">
        #{urgentPhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="banjiId != null">
        #{banjiId,jdbcType=INTEGER},
      </if>
      <if test="chexingId != null">
        #{chexingId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="shenhe != null">
        #{shenhe,jdbcType=VARCHAR},
      </if>
      <if test="t1 != null">
        #{t1,jdbcType=VARCHAR},
      </if>
      <if test="t2 != null">
        #{t2,jdbcType=VARCHAR},
      </if>
      <if test="t3 != null">
        #{t3,jdbcType=VARCHAR},
      </if>
      <if test="t4 != null">
        #{t4,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="shenfenzheng != null">
        #{shenfenzheng,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.happydriving.rockets.server.entity.StudentInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.urgentName != null">
        urgent_name = #{record.urgentName,jdbcType=VARCHAR},
      </if>
      <if test="record.urgentPhone != null">
        urgent_phone = #{record.urgentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.banjiId != null">
        banji_id = #{record.banjiId,jdbcType=INTEGER},
      </if>
      <if test="record.chexingId != null">
        chexing_id = #{record.chexingId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shenhe != null">
        shenhe = #{record.shenhe,jdbcType=VARCHAR},
      </if>
      <if test="record.t1 != null">
        t1 = #{record.t1,jdbcType=VARCHAR},
      </if>
      <if test="record.t2 != null">
        t2 = #{record.t2,jdbcType=VARCHAR},
      </if>
      <if test="record.t3 != null">
        t3 = #{record.t3,jdbcType=VARCHAR},
      </if>
      <if test="record.t4 != null">
        t4 = #{record.t4,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.shenfenzheng != null">
        shenfenzheng = #{record.shenfenzheng,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      urgent_name = #{record.urgentName,jdbcType=VARCHAR},
      urgent_phone = #{record.urgentPhone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      banji_id = #{record.banjiId,jdbcType=INTEGER},
      chexing_id = #{record.chexingId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      shenhe = #{record.shenhe,jdbcType=VARCHAR},
      t1 = #{record.t1,jdbcType=VARCHAR},
      t2 = #{record.t2,jdbcType=VARCHAR},
      t3 = #{record.t3,jdbcType=VARCHAR},
      t4 = #{record.t4,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      shenfenzheng = #{record.shenfenzheng,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.happydriving.rockets.server.entity.StudentInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="urgentName != null">
        urgent_name = #{urgentName,jdbcType=VARCHAR},
      </if>
      <if test="urgentPhone != null">
        urgent_phone = #{urgentPhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="banjiId != null">
        banji_id = #{banjiId,jdbcType=INTEGER},
      </if>
      <if test="chexingId != null">
        chexing_id = #{chexingId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="shenhe != null">
        shenhe = #{shenhe,jdbcType=VARCHAR},
      </if>
      <if test="t1 != null">
        t1 = #{t1,jdbcType=VARCHAR},
      </if>
      <if test="t2 != null">
        t2 = #{t2,jdbcType=VARCHAR},
      </if>
      <if test="t3 != null">
        t3 = #{t3,jdbcType=VARCHAR},
      </if>
      <if test="t4 != null">
        t4 = #{t4,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="shenfenzheng != null">
        shenfenzheng = #{shenfenzheng,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCoachScheduleByStudentId" parameterType="java.lang.Integer" resultType="com.happydriving.rockets.server.model.CoachScheduleDetailInfo">
    select
       coach_schedule.id as coachScheduleId,
       coach.name as coachName,
       user.phone as coachPhone,
       province.Name as provinceName,
       city.Name as cityName,
       county.Name as countyName,
       town.Name as townName,
       coach_schedule.addr_in_detail as detailAddress,
       car_type.car_type as carTypeName,
       course_type.course_name as courseName,
       coach_schedule.starttime as startTime,
       coach_schedule.endtime as endTime
       from coach_schedule
       inner join user on coach_schedule.user_id = user.id
       left outer join coach_product on coach_product.user_id = coach_schedule.user_id
       inner join student on student.product_id = coach_product.id
       inner join coach on coach_schedule.user_id = coach.id
       inner join province on coach_schedule.province_id = province.id
       inner join city on coach_schedule.city_id = city.id
       inner join county on coach_schedule.county_id = county.id
       inner join town on coach_schedule.town_id = town.id
       inner join car_type on coach_schedule.cartype_id = car_type.id
       inner join course_type on coach_schedule.coursetype_id = course_type.id
       where user.id=#{studentId} order by starttime asc;
  </select>

  <select id="getCoachByStudentId" parameterType="java.lang.Integer" resultType="map">
        select
          coach.*
        from coach
        inner join user on user.id = coach.user_id
        left join coach_product on coach_product.user_id = coach.id
        inner join student on student.product_id = coach_product.id
        where user.id=#{studentId};
  </select>

  <select id="getStudentInfoListByCoachId" parameterType="java.lang.Integer" resultType="com.happydriving.rockets.server.model.StudentQueryInfo">
    select
      user.id as id,
      student.name as name,
      user.phone as phone,
      student.urgent_name as urgentName,
      student.urgent_phone as urgentPhone,
      car_type.car_type as carTypeName,
      class_type.class_type as classTypeName,
      province.name as provinceName,
      city.name as cityName,
      county.name as countyName,
      town.name as townName
    from student
    inner join user on student.user_id = user.id
    inner join coach_product on student.product_id = coach_product.id
    inner join coach on coach_product.user_id = coach.id
    inner join class_type on student.banji_id = class_type.id
    inner join car_type on student.chexing_id = car_type.id
    left outer join province on student.t1 = province.id
    left outer join city on student.t2 = city.id
    left outer join county on student.t3 = county.id
    left outer join town on student.t4 = town.id
    where user.id=#{coachId,jdbcType=INTEGER}
  </select>

    <update id="updatePersonalTest">
        update student set personalitytest=#{pics} where student.user_id=#{userId}
    </update>
</mapper>