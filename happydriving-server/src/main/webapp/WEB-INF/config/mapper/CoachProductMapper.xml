<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.happydriving.rockets.server.mapper.CoachProductMapper">
    <resultMap id="BaseResultMap" type="com.happydriving.rockets.server.entity.CoachProduct">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="cartype_id" jdbcType="INTEGER" property="cartypeId" />
        <result column="classtype_id" jdbcType="INTEGER" property="classtypeId" />
        <result column="price" jdbcType="DECIMAL" property="price" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, user_id, created_at, updated_at, cartype_id, classtype_id, price
    </sql>
    <select id="selectByExample" parameterType="com.happydriving.rockets.server.entity.CoachProductExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from coach_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.happydriving.rockets.server.entity.CoachProductExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from coach_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" parameterType="com.happydriving.rockets.server.entity.CoachProduct">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into coach_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="cartypeId != null">
                cartype_id,
            </if>
            <if test="classtypeId != null">
                classtype_id,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="cartypeId != null">
                #{cartypeId,jdbcType=INTEGER},
            </if>
            <if test="classtypeId != null">
                #{classtypeId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.happydriving.rockets.server.entity.CoachProductExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from coach_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update coach_product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.cartypeId != null">
                cartype_id = #{record.cartypeId,jdbcType=INTEGER},
            </if>
            <if test="record.classtypeId != null">
                classtype_id = #{record.classtypeId,jdbcType=INTEGER},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update coach_product
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
        cartype_id = #{record.cartypeId,jdbcType=INTEGER},
        classtype_id = #{record.classtypeId,jdbcType=INTEGER},
        price = #{record.price,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.happydriving.rockets.server.entity.CoachProduct">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update coach_product
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="cartypeId != null">
                cartype_id = #{cartypeId,jdbcType=INTEGER},
            </if>
            <if test="classtypeId != null">
                classtype_id = #{classtypeId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getAllCoachProduceInfo" parameterType="java.lang.Integer"
            resultType="com.happydriving.rockets.server.model.CoachProductInfo">
    select
      c.id as id,
      a.id as carTypeId,
      a.car_type as carTypeName,
      t.id as classTypeId,
      t.class_type as classTypeName,
      c.price as price
    from coach_product  c
    inner join car_type a ON c.cartype_id=a.id
    inner join class_type t on c.classtype_id = t.id
    where c.user_id = #{coachId,jdbcType=INTEGER}
  </select>

    <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.happydriving.rockets.server.entity.CoachProduct">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into coach_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="cartypeId != null">
                cartype_id,
            </if>
            <if test="classtypeId != null">
                classtype_id,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="cartypeId != null">
                #{cartypeId,jdbcType=INTEGER},
            </if>
            <if test="classtypeId != null">
                #{classtypeId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>


    <select id="getCoachProductsByCondition" parameterType="com.happydriving.rockets.server.model.CoachSelectCondition"
            resultType="com.happydriving.rockets.server.model.CoachProductInfo">
        select
        user.id as coachId,
        coach.name as coachName,
        coach_certificate_photo.personal_photo as coachPersonalImgUrl,
        car.id as carTypeId,
        car.car_type as carTypeName,
        class.id as classTypeId,
        class.class_type as classTypeName,
        coach_product.price as price,
        coach_product.id as coachProductId,
        province.name as provinceName,
        city.name as cityName,
        county.name as countyName,
        town.name as townName
        from coach_product
        inner join user on coach_product.user_id = user.id
        inner join coach on user.id = coach.user_id
        inner join car_type car on car.id = coach_product.cartype_id
        inner join class_type class on class.id = coach_product.classtype_id
        left outer join coach_certificate_photo on coach_certificate_photo.coach_id = user.id
        left outer join province on coach.t1 = province.id
        left outer join city on coach.t2 = city.id
        left outer join county on coach.t3 = county.id
        left outer join town on coach.t4 = town.id
        where 1=1
        <if test="coachCondition.carTypeId != 0">
            and coach_product.cartype_id = #{coachCondition.carTypeId,jdbcType=INTEGER}
        </if>
        <if test="coachCondition.classTypeId != 0">
            and coach_product.classtype_id = #{coachCondition.classTypeId,jdbcType=INTEGER}
        </if>
        <if test="coachCondition.priceRangeMin != 0">
            and coach_product.price &gt;= #{coachCondition.priceRangeMin,jdbcType=INTEGER}
        </if>
        <if test="coachCondition.priceRangeMax != 0">
            and coach_product.price &lt;= #{coachCondition.priceRangeMax,jdbcType=INTEGER}
        </if>
        <if test="coachCondition.provinceId != 0">
            and coach.t1 = #{coachCondition.provinceId,jdbcType=INTEGER}
        </if>
        <if test="coachCondition.cityId != 0">
            and coach.t2 = #{coachCondition.cityId, jdbcType=INTEGER}
        </if>
        <if test="coachCondition.countyId != 0">
            and coach.t3 = #{coachCondition.countyId,jdbcType=INTEGER}
        </if>
        <if test="coachCondition.townId != 0">
            and coach.t4 = #{coachCondition.townId,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getCoachProductDetailById" resultType="com.happydriving.rockets.server.model.CoachProductInfo">
        select
          coach.name as coachName,
          car_type.car_type as carTypeName,
          class_type.class_type as classTypeName,
          coach_product.price as price,
          coach_product.id as coachProductId
        from coach_product
        inner join user on coach_product.user_id = user.id
        inner join coach on coach.user_id = user.id
        inner join car_type on car_type.id = coach_product.cartype_id
        inner join class_type on class_type.id = coach_product.classtype_id
        where coach_product.id = #{productId, jdbcType=INTEGER} limit 1;
    </select>

</mapper>