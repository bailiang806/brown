<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.happydriving.rockets.campaign.spread.mapper.SpreadReferrerMapper">
  <resultMap id="BaseResultMap" type="com.happydriving.rockets.campaign.spread.entity.SpreadReferrer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password_digest" jdbcType="VARCHAR" property="passwordDigest" />
    <result column="remember_token" jdbcType="VARCHAR" property="rememberToken" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, phone, name, password_digest, remember_token, created_at, city_id
  </sql>
  <select id="selectByExample" parameterType="com.happydriving.rockets.campaign.spread.entity.SpreadReferrerExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from spread_referrer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.happydriving.rockets.campaign.spread.entity.SpreadReferrerExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from spread_referrer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.happydriving.rockets.campaign.spread.entity.SpreadReferrer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into spread_referrer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="passwordDigest != null">
        password_digest,
      </if>
      <if test="rememberToken != null">
        remember_token,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="passwordDigest != null">
        #{passwordDigest,jdbcType=VARCHAR},
      </if>
      <if test="rememberToken != null">
        #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.happydriving.rockets.campaign.spread.entity.SpreadReferrerExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from spread_referrer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update spread_referrer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordDigest != null">
        password_digest = #{record.passwordDigest,jdbcType=VARCHAR},
      </if>
      <if test="record.rememberToken != null">
        remember_token = #{record.rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update spread_referrer
    set id = #{record.id,jdbcType=INTEGER},
    phone = #{record.phone,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    password_digest = #{record.passwordDigest,jdbcType=VARCHAR},
    remember_token = #{record.rememberToken,jdbcType=VARCHAR},
    created_at = #{record.createdAt,jdbcType=TIMESTAMP},
    city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.happydriving.rockets.campaign.spread.entity.SpreadReferrer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update spread_referrer
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="passwordDigest != null">
        password_digest = #{passwordDigest,jdbcType=VARCHAR},
      </if>
      <if test="rememberToken != null">
        remember_token = #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="id" parameterType="com.happydriving.rockets.campaign.spread.entity.SpreadReferrer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into spread_referrer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="passwordDigest != null">
        password_digest,
      </if>
      <if test="rememberToken != null">
        remember_token,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="passwordDigest != null">
        #{passwordDigest,jdbcType=VARCHAR},
      </if>
      <if test="rememberToken != null">
        #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="getSpreadReferrerStatisticInfoByCityId" resultType="com.happydriving.rockets.campaign.spread.model.SpreadReferrerStatisticInfo">
    select
      spread_referrer.id as referrerId,
      spread_referrer.name as referrerName,
      spread_referrer.created_at as createAt,
      spread_referrer.phone as referrerPhone,
      count(spread_student.id) as totalReferrerCount,
      sum(spread_student.is_transfer) as totalTransferCount
    from spread_referrer
	left outer join spread_student on spread_student.referrer_id = spread_referrer.id
	where spread_referrer.city_id = #{cityId, jdbcType=INTEGER}
	group by spread_referrer.id
  </select>

  <select id="getStatisticCityReferrerCount" resultType="map">
    select
    service_city.id as cityId,
    service_city.name as cityName,
    count(distinct spread_referrer.id) as referrerCount,
    count(distinct spread_student.id) as totalStudentCount,
    sum(spread_student.is_transfer) as transferStudentCount
    from spread_referrer
    left outer join spread_student on spread_referrer.id = spread_student.referrer_id
    inner join service_city on service_city.id = spread_referrer.city_id
    group by spread_referrer.city_id
  </select>

  <select id="getDailyCityTransferCount" resultType="map">
    select
    service_city.id as cityId,
    service_city.name as cityName,
    sum(spread_student.is_transfer) as transferCount
    from spread_student
    inner join spread_referrer on spread_student.referrer_id = spread_referrer.id
    inner join service_city on service_city.id = spread_referrer.city_id
    where spread_student.created_at between #{startDate,jdbcType=TIMESTAMP} and #{endDate,jdbcType=TIMESTAMP}
    group by service_city.id;
  </select>

</mapper>